# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.inline_response2001_foo import InlineResponse2001Foo
from swagger_server import util


class InlineResponse2001(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, season: str=None, foo: InlineResponse2001Foo=None):  # noqa: E501
        """InlineResponse2001 - a model defined in Swagger

        :param season: The season of this InlineResponse2001.  # noqa: E501
        :type season: str
        :param foo: The foo of this InlineResponse2001.  # noqa: E501
        :type foo: InlineResponse2001Foo
        """
        self.swagger_types = {
            'season': str,
            'foo': InlineResponse2001Foo
        }

        self.attribute_map = {
            'season': 'season',
            'foo': 'foo'
        }

        self._season = season
        self._foo = foo

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2001':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_1 of this InlineResponse2001.  # noqa: E501
        :rtype: InlineResponse2001
        """
        return util.deserialize_model(dikt, cls)

    @property
    def season(self) -> str:
        """Gets the season of this InlineResponse2001.


        :return: The season of this InlineResponse2001.
        :rtype: str
        """
        return self._season

    @season.setter
    def season(self, season: str):
        """Sets the season of this InlineResponse2001.


        :param season: The season of this InlineResponse2001.
        :type season: str
        """
        if season is None:
            raise ValueError("Invalid value for `season`, must not be `None`")  # noqa: E501

        self._season = season

    @property
    def foo(self) -> InlineResponse2001Foo:
        """Gets the foo of this InlineResponse2001.


        :return: The foo of this InlineResponse2001.
        :rtype: InlineResponse2001Foo
        """
        return self._foo

    @foo.setter
    def foo(self, foo: InlineResponse2001Foo):
        """Sets the foo of this InlineResponse2001.


        :param foo: The foo of this InlineResponse2001.
        :type foo: InlineResponse2001Foo
        """
        if foo is None:
            raise ValueError("Invalid value for `foo`, must not be `None`")  # noqa: E501

        self._foo = foo
